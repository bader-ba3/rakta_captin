import 'dart:async';
import 'dart:ui';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';



import 'trip_view_model.dart';
import '../model/PlaceModel.dart';
import '../model/location_model.dart';
import '../model/trip_model.dart';
import '../Services/polyline_services.dart';
import '../Services/services.dart';
import 'place_view_model.dart';
import 'user_view_model.dart';

class HomeViewModel extends GetxController {
  Completer<GoogleMapController> controller = Completer();
  Map<MarkerId, Marker> markers = {};
  Map<String, Marker> firebaseMarker = {};

  UserViewModel userViewModel = Get.find<UserViewModel>();
  TripViewModel tripViewModel = Get.find<TripViewModel>();
  PlaceViewModel placeViewModel = Get.find<PlaceViewModel>();

  TripStatus? get currentTrip => tripViewModel.currentTrip.tpStatus;

  String? get riderId => tripViewModel.currentTrip.tpRider;
  final Set<Polyline> _polyLines = {};

  Set<Polyline> get polyLines => _polyLines;

  LocationModel? shoosLocation;

  cleaMarkers() {
    markers.clear();
  }

  setRiderMarker() {
    userViewModel.userMap.forEach((key, value) {
      if (value.userRider == true && value.userState == "ON") {
        setMarker(value.userLocation!.location!, "car_gry", value.userId!,value.userBearing!,size: 120);
      }
    });
  }

  List<TripModel> checkTrip(String uId) {
    tripViewModel.getTripUser(uId);
    return [TripModel()];
  }

  HomeViewModel(){
    FirebaseFirestore.instance.collection('dashboardMap').doc('0').snapshots().listen((event) {
      markers.removeWhere((key, _value) => key.value.contains("marker"));
      firebaseMarker.clear();
      (event.data()!["markers"] as Map).forEach((key, value) {
        setMarker(LatLng(double.parse(value['lat']),double.parse(value['lng'])), value['image'], value['id'].toString(),"0",size: 100,flat: false);
        update();
      });
    });
  }

  void setMarker(LatLng location, String path, String uID,String bearing,{int? size,bool? flat}) {
    Utils()
        .getBytesFromAsset(path: 'assets/$path.png', width: size??100)
        .then((value) {
      Marker newMarker = Marker(
        flat: flat??true,
        markerId: MarkerId(uID),
        icon: BitmapDescriptor.fromBytes(value),
        position: location,
        rotation: double.parse(bearing),
        onTap: () {},
      );
      markers[MarkerId(uID)]= newMarker;
      update();
    });
  }

  Future<void> animateCamera(LatLng location) async {
    final GoogleMapController controller = await this.controller.future;
    CameraPosition cameraPosition = CameraPosition(
      bearing: 0,

      target: location,
      zoom: 17.00,
    );
    // print(
    //     "animating camera to (lat: ${location.latitude}, long: ${location.longitude})");
    controller.animateCamera(CameraUpdate.newCameraPosition(cameraPosition));
  }

  addTip(TripModel tripModel) async {
    await tripViewModel.addTrip(tripModel);
    listenTripById(tripModel.tpId!);
  }

  listenTripById(String tripId) {
    tripViewModel.listenTripById(tripId);
  }

  Future<void> getDrawPolylineGreen(List<LocationModel> tpLocation) async {
    List<LatLng> polylineCoordinates = [
      LatLng( 25.7966255,55.9706360),
      LatLng( 25.7968719,55.9707111),
      LatLng( 25.7969564,55.9707836),
      LatLng( 25.7970602,55.9707809),
      LatLng( 25.7977895,55.9710491),
      LatLng( 25.7974087,55.9723324),
      LatLng( 25.7950448,55.9714309),
      LatLng( 25.7947323,55.9722265),
      LatLng( 25.7945487,55.9723606),
      LatLng( 25.7942493,55.9724303),
      LatLng( 25.7915095,55.9715034),
      LatLng( 25.7901675,55.9710453),
      LatLng( 25.7894113,55.9708087),
      LatLng( 25.7887753,55.9706015),
      LatLng( 25.7874193,55.9701623),
      LatLng( 25.7867387,55.9699379),
      LatLng( 25.7860232,55.9697276),
      LatLng( 25.7846125,55.9694605),
      LatLng( 25.7838708,55.9693724),
      LatLng( 25.7831551,55.9693020),
      LatLng( 25.7806814,55.9690444),
      LatLng( 25.7794314,55.9689446),
      LatLng( 25.7782087,55.9688282),
      LatLng( 25.7774834,55.9687587),
      LatLng( 25.7767565,55.9686691),
      LatLng( 25.7760291,55.9686201),
      LatLng( 25.7753053,55.9685567),
      LatLng( 25.7743184,55.9684437),
      LatLng( 25.7731452,55.9682943),
      LatLng( 25.7726230,55.9682278),
      LatLng( 25.7720530,55.9682062),
      LatLng( 25.7716728,55.9682181),
      LatLng( 25.7710256,55.9683006),
      LatLng( 25.7700919,55.9685081),
      LatLng( 25.7691604,55.9687683),
      LatLng( 25.7672203,55.9693501),
      LatLng( 25.7662319,55.9696704),
      LatLng( 25.7657393,55.9698193),
      LatLng( 25.7654864,55.9698728),
      LatLng( 25.7651928,55.9698979),
      LatLng( 25.7648614,55.9698056),
      LatLng( 25.7646612,55.9699874),
      LatLng( 25.7645919,55.9700916),
      LatLng( 25.7644749,55.9702135),
      LatLng( 25.7590795,55.9718144),
      LatLng( 25.7563294,55.9726354),
      LatLng( 25.7549497,55.9730215),
      LatLng( 25.7542637,55.9732113),
      LatLng( 25.7535783,55.9734471),
      LatLng( 25.7525313,55.9738608),
      LatLng( 25.7515229,55.9743556),
      LatLng( 25.7495055,55.9753853),
      LatLng( 25.7485591,55.9758391),
      LatLng( 25.7474905,55.9762472),
      LatLng( 25.7453525,55.9769758),
      LatLng( 25.7434671,55.9775652),
      LatLng( 25.7415086,55.9782601),
      LatLng( 25.7408948,55.9784762),
      LatLng( 25.7402790,55.9787652),
      LatLng( 25.7389813,55.9794636),
      LatLng( 25.7378732,55.9801902),
      LatLng( 25.7367833,55.9808495),
      LatLng( 25.7362890,55.9811934),
      LatLng( 25.7356840,55.9815414),
      LatLng( 25.7342027,55.9821619),
      LatLng( 25.7327202,55.9825795),
      LatLng( 25.7311155,55.9829103),
      LatLng( 25.7273429,55.9836918),
      LatLng( 25.7254909,55.9840580),
      LatLng( 25.7245854,55.9841558),
      LatLng( 25.7237409,55.9841189),
      LatLng( 25.7228337,55.9839999),
      LatLng( 25.7219289,55.9837237),
      LatLng( 25.7210681,55.9833131),
      LatLng( 25.7202683,55.9827874),
      LatLng( 25.7186064,55.9815043),
      LatLng( 25.7172522,55.9804152),
      LatLng( 25.7161889,55.9795841),
      LatLng( 25.7151655,55.9786493),
      LatLng( 25.7145819,55.9778233),
      LatLng( 25.7141513,55.9768718),
      LatLng( 25.7139885,55.9762916),
      LatLng( 25.7138790,55.9756077),
      LatLng( 25.7138458,55.9740774),
      LatLng( 25.7138391,55.9726723),
      LatLng( 25.7137456,55.9719839),
      LatLng( 25.7137614,55.9716327),
      LatLng( 25.7139436,55.9713463),
      LatLng( 25.7140071,55.9711336),
      LatLng( 25.7139670,55.9708054),
      LatLng( 25.7138471,55.9706101),
      LatLng( 25.7135776,55.9705098),
      LatLng( 25.7133116,55.9705353),
      LatLng( 25.7129758,55.9705926),
      LatLng( 25.7126134,55.9703779),
      LatLng( 25.7119307,55.9701187),
      LatLng( 25.7107745,55.9699514),
      LatLng( 25.7100059,55.9699123),
      LatLng( 25.7090589,55.9698322),
      LatLng( 25.7081075,55.9697488),
      LatLng( 25.7058991,55.9696000),
      LatLng( 25.7048451,55.9693992),
      LatLng( 25.7038756,55.9690092),
      LatLng( 25.7017999,55.9681408),
      LatLng( 25.6997397,55.9673712),
      LatLng( 25.6990426,55.9671128),
      LatLng( 25.6982888,55.9669312),
      LatLng( 25.6974485,55.9668997),
      LatLng( 25.6965904,55.9670097),
      LatLng( 25.6946817,55.9675176),
      LatLng( 25.6935749,55.9677822),
      LatLng( 25.6930783,55.9678699),
      LatLng( 25.6926199,55.9679165),
      LatLng( 25.6921594,55.9679474),
      LatLng( 25.6912231,55.9678797),
      LatLng( 25.6902680,55.9676591),
      LatLng( 25.6883422,55.9669961),
      LatLng( 25.6874164,55.9668046),
      LatLng( 25.6864144,55.9667120),
      LatLng( 25.6854491,55.9666083),
      LatLng( 25.6844509,55.9665801),
      LatLng( 25.6839035,55.9666337),
      LatLng( 25.6833528,55.9667950),
      LatLng( 25.6822901,55.9671649),
      LatLng( 25.6801648,55.9678451),
      LatLng( 25.6780079,55.9685867),
      LatLng( 25.6768787,55.9688237),
      LatLng( 25.6758116,55.9689329),
      LatLng( 25.6712198,55.9695044),
      LatLng( 25.6689592,55.9698248),
      LatLng( 25.6677383,55.9699027),
      LatLng( 25.6670952,55.9698408),
      LatLng( 25.6665019,55.9697504),
      LatLng( 25.6651926,55.9692779),
      LatLng( 25.6645098,55.9689119),
      LatLng( 25.6639756,55.9685473),
      LatLng( 25.6615374,55.9667359),
      LatLng( 25.6592428,55.9649671),
      LatLng( 25.6580849,55.9640911),
      LatLng( 25.6568348,55.9631602),
      LatLng( 25.6518404,55.9593885),
      LatLng( 25.6506241,55.9584471),
      LatLng( 25.6493371,55.9576132),
      LatLng( 25.6466403,55.9562527),
      LatLng( 25.6344444,55.9503471),
      LatLng( 25.6283107,55.9473231),
      LatLng( 25.6251668,55.9458053),
      LatLng( 25.6225309,55.9444216),
      LatLng( 25.6224488,55.9442630),
      LatLng( 25.6223569,55.9440619),
      LatLng( 25.6222045,55.9439573),
      LatLng( 25.6220279,55.9439653),
      LatLng( 25.6219022,55.9440136),
      LatLng( 25.6217305,55.9440404),
      LatLng( 25.6215095,55.9440091),
      LatLng( 25.6213242,55.9439412),
      LatLng( 25.6206990,55.9437058),
      LatLng( 25.6200254,55.9435442),
      LatLng( 25.6195011,55.9434419),
      LatLng( 25.6187386,55.9433895),
      LatLng( 25.6179654,55.9434253),
      LatLng( 25.6179752,55.9433278),
      LatLng( 25.6179454,55.9431829),
      LatLng( 25.6177591,55.9431963),
      LatLng( 25.6175995,55.9432232),
      LatLng( 25.6175245,55.9429201),
    ];
 /*   for (var tp in tpLocation) {
      polylineCoordinates.add(tp.location!);
    }*/
    Polyline polyline =
        await PolylineService().getdrawPolyline(polylineCoordinates,Colors.green);

    _polyLines.add(polyline);

    update();
  }

  Future<void> getDrawPolylineRedLine(List<LocationModel> tpLocation) async {
    print("helllllo");
    List<LatLng> polylineCoordinates = const[
      LatLng( 25.7964951,55.9707100),
      LatLng( 25.7963454,55.9706584),
      LatLng( 25.7960477,55.9718119),
      LatLng( 25.7951826,55.9714804),
      LatLng( 25.7943200,55.9711656),
      LatLng( 25.7894555,55.9693294),
      LatLng( 25.7870207,55.9684054),
      LatLng( 25.7858367,55.9677831),
      LatLng( 25.7852366,55.9675198),
      LatLng( 25.7845994,55.9673291),
      LatLng( 25.7793836,55.9667463),
      LatLng( 25.7767757,55.9664375),
      LatLng( 25.7754809,55.9662737),
      LatLng( 25.7748187,55.9661984),
      LatLng( 25.7744877,55.9661486),
      LatLng( 25.7741663,55.9660452),
      LatLng( 25.7739230,55.9659829),
      LatLng( 25.7737091,55.9658195),
      LatLng( 25.7735790,55.9655763),
      LatLng( 25.7735534,55.9652852),
      LatLng( 25.7736916,55.9637685),
      LatLng( 25.7737114,55.9629880),
      LatLng( 25.7736747,55.9622213),
      LatLng( 25.7734226,55.9607075),
      LatLng( 25.7730996,55.9591977),
      LatLng( 25.7718167,55.9532441),
      LatLng( 25.7706285,55.9476680),
      LatLng( 25.7704749,55.9469434),
      LatLng( 25.7704793,55.9466348),
      LatLng( 25.7705188,55.9465252),
      LatLng( 25.7705216,55.9463950),
      LatLng( 25.7702588,55.9458289),
      LatLng( 25.7695593,55.9437204),
      LatLng( 25.7688687,55.9418571),
      LatLng( 25.7688429,55.9415980),
      LatLng( 25.7688347,55.9414321),
      LatLng( 25.7688645,55.9412686),
      LatLng( 25.7688854,55.9411934),
      LatLng( 25.7689455,55.9411184),
      LatLng( 25.7690637,55.9410171),
      LatLng( 25.7699141,55.9406908),
      LatLng( 25.7703416,55.9405187),
      LatLng( 25.7707412,55.9402607),
      LatLng( 25.7709043,55.9400568),
      LatLng( 25.7710393,55.9398243),
      LatLng( 25.7711353,55.9395657),
      LatLng( 25.7712023,55.9392934),
      LatLng( 25.7713201,55.9387327),
      LatLng( 25.7715125,55.9382152),
      LatLng( 25.7716467,55.9379201),
      LatLng( 25.7718217,55.9376883),
      LatLng( 25.7721966,55.9373032),
      LatLng( 25.7724014,55.9371409),
      LatLng( 25.7726200,55.9370237),
      LatLng( 25.7730527,55.9368480),
      LatLng( 25.7735018,55.9367813),
      LatLng( 25.7739509,55.9368032),
      LatLng( 25.7743845,55.9369053),
      LatLng( 25.7748172,55.9370623),
      LatLng( 25.7749814,55.9372233),
      LatLng( 25.7751364,55.9372078),
      LatLng( 25.7752079,55.9371502),
      LatLng( 25.7752375,55.9370677),
      LatLng( 25.7752231,55.9368993),
      LatLng( 25.7751312,55.9367834),
      LatLng( 25.7749993,55.9367903),
      LatLng( 25.7748747,55.9368486),
      LatLng( 25.7745095,55.9368058),
      LatLng( 25.7741410,55.9367220),
      LatLng( 25.7737647,55.9366516),
      LatLng( 25.7733925,55.9366214),
      LatLng( 25.7730399,55.9366693),
      LatLng( 25.7727028,55.9367799),
      LatLng( 25.7723674,55.9369430),
      LatLng( 25.7720499,55.9371811),
      LatLng( 25.7717609,55.9374769),
      LatLng( 25.7715242,55.9378339),
      LatLng( 25.7711887,55.9386447),
      LatLng( 25.7709825,55.9395686),
      LatLng( 25.7707545,55.9400199),
      LatLng( 25.7704179,55.9403266),
      LatLng( 25.7697121,55.9406234),
      LatLng( 25.7693585,55.9407642),
      LatLng( 25.7691726,55.9408143),
      LatLng( 25.7689834,55.9408263),
      LatLng( 25.7688476,55.9408184),
      LatLng( 25.7687113,55.9407838),
      LatLng( 25.7684676,55.9406451),
      LatLng( 25.7680352,55.9395719),
      LatLng( 25.7677100,55.9383267),
      LatLng( 25.7674021,55.9371092),
      LatLng( 25.7671860,55.9357637),
      LatLng( 25.7667574,55.9306076),
      LatLng( 25.7663179,55.9256284),
      LatLng( 25.7661059,55.9221013),
      LatLng( 25.7660345,55.9212857),
      LatLng( 25.7659958,55.9208655),
      LatLng( 25.7660378,55.9204456),
      LatLng( 25.7662222,55.9202529),
      LatLng( 25.7662722,55.9201311),
      LatLng( 25.7662810,55.9199949),
      LatLng( 25.7662394,55.9198756),
      LatLng( 25.7661473,55.9197835),
      LatLng( 25.7659927,55.9197226),
      LatLng( 25.7658262,55.9197479),
      LatLng( 25.7654184,55.9196599),
      LatLng( 25.7650234,55.9194383),
      LatLng( 25.7626468,55.9178546),
      LatLng( 25.7614505,55.9170066),
      LatLng( 25.7603096,55.9160275),
      LatLng( 25.7558966,55.9118946),
      LatLng( 25.7535784,55.9096845),
      LatLng( 25.7513618,55.9072820),
      LatLng( 25.7503024,55.9060888),
      LatLng( 25.7498036,55.9054048),
      LatLng( 25.7493576,55.9046309),
      LatLng( 25.7478349,55.9017794),
      LatLng( 25.7474594,55.9010971),
      LatLng( 25.7470490,55.9004703),
      LatLng( 25.7458843,55.8993090),
      LatLng( 25.7434567,55.8973099),
      LatLng( 25.7423134,55.8962787),
      LatLng( 25.7411997,55.8952035),
      LatLng( 25.7390122,55.8929522),
      LatLng( 25.7380066,55.8917596),
      LatLng( 25.7370481,55.8904726),
      LatLng( 25.7352010,55.8878343),
      LatLng( 25.7333098,55.8852559),
      LatLng( 25.7314835,55.8825721),
      LatLng( 25.7283349,55.8774475),
      LatLng( 25.7249297,55.8725525),
      LatLng( 25.7220511,55.8671337),
      LatLng( 25.7205490,55.8644905),
      LatLng( 25.7197576,55.8632295),
      LatLng( 25.7193373,55.8626127),
      LatLng( 25.7189953,55.8619165),
      LatLng( 25.7190112,55.8615481),
      LatLng( 25.7190115,55.8613389),
      LatLng( 25.7189179,55.8611870),
      LatLng( 25.7187491,55.8610339),
      LatLng( 25.7185049,55.8609435),
      LatLng( 25.7182607,55.8607578),
      LatLng( 25.7176760,55.8598164),
      LatLng( 25.7171165,55.8588497),
      LatLng( 25.7166510,55.8578375),
      LatLng( 25.7163086,55.8566794),
      LatLng( 25.7152370,55.8520334),
      LatLng( 25.7142534,55.8475258),
      LatLng( 25.7140952,55.8463824),
      LatLng( 25.7140208,55.8457685),
      LatLng( 25.7139981,55.8452075),
      LatLng( 25.7138533,55.8429135),
      LatLng( 25.7139147,55.8427041),
      LatLng( 25.7140057,55.8425234),
      LatLng( 25.7141198,55.8423612),
      LatLng( 25.7142551,55.8422629),
      LatLng( 25.7145290,55.8421656),
      LatLng( 25.7148167,55.8420996),
      LatLng( 25.7154270,55.8419972),
      LatLng( 25.7155538,55.8420484),
      LatLng( 25.7156783,55.8420615),
      LatLng( 25.7157861,55.8419988),
      LatLng( 25.7158671,55.8419155),
      LatLng( 25.7160600,55.8418451),
      LatLng( 25.7162561,55.8418055),
      LatLng( 25.7166450,55.8417289),
      LatLng( 25.7167390,55.8417889),
      LatLng( 25.7168479,55.8418040),
      LatLng( 25.7169368,55.8417469),
      LatLng( 25.7169737,55.8416273),
      LatLng( 25.7169464,55.8415147),
      LatLng( 25.7168821,55.8414374),
      LatLng( 25.7167691,55.8411223),
      LatLng( 25.7165813,55.8408359),
      LatLng( 25.7164682,55.8407001),
      LatLng( 25.7163242,55.8406005),
      LatLng( 25.7158082,55.8401607),
      LatLng( 25.7153247,55.8396801),
      LatLng( 25.7149156,55.8390948),
      LatLng( 25.7145418,55.8385058),
      LatLng( 25.7142466,55.8378448),
      LatLng( 25.7140352,55.8371668),
      LatLng( 25.7139041,55.8364571),
      LatLng( 25.7138396,55.8358959),
      LatLng( 25.7138277,55.8353248),
      LatLng( 25.7138694,55.8347476),
      LatLng( 25.7139621,55.8341838),
      LatLng( 25.7142450,55.8331250),
      LatLng( 25.7143075,55.8328567),
      LatLng( 25.7143471,55.8325841),
      LatLng( 25.7143923,55.8321973),
      LatLng( 25.7144396,55.8320671),
      LatLng( 25.7144661,55.8319612),
      LatLng( 25.7144391,55.8318641),
      LatLng( 25.7142898,55.8317842),
      LatLng( 25.7140574,55.8318670),
      LatLng( 25.7137837,55.8318663),
      LatLng( 25.7132622,55.8319104),
      LatLng( 25.7131818,55.8319147),
      LatLng( 25.7131199,55.8318682),
      LatLng( 25.7129703,55.8318633),
      LatLng( 25.7128635,55.8319771),
      LatLng( 25.7127390,55.8320829),
      LatLng( 25.7125874,55.8321322),
      LatLng( 25.7124290,55.8321529),
      LatLng( 25.7122842,55.8321483),
      LatLng( 25.7121291,55.8320949),
      LatLng( 25.7120196,55.8320022),
      LatLng( 25.7119166,55.8318740),
      LatLng( 25.7117797,55.8310888),
      LatLng( 25.7117384,55.8306682),
      LatLng( 25.7117483,55.8302320),
      LatLng( 25.7119221,55.8272848),
      LatLng( 25.7119983,55.8258081),
      LatLng( 25.7120187,55.8250877),
      LatLng( 25.7119935,55.8243648),
      LatLng( 25.7115150,55.8213545),
      LatLng( 25.7112765,55.8199315),
      LatLng( 25.7111356,55.8192113),
      LatLng( 25.7109239,55.8185291),
      LatLng( 25.7107014,55.8178760),
      LatLng( 25.7104466,55.8172548),
      LatLng( 25.7097429,55.8161388),
      LatLng( 25.7079763,55.8140906),
      LatLng( 25.7061998,55.8121417),
      LatLng( 25.7053321,55.8111393),
      LatLng( 25.7044526,55.8101377),
      LatLng( 25.6954199,55.7999292),
      LatLng( 25.6908772,55.7947708),
      LatLng( 25.6887320,55.7920540),
      LatLng( 25.6876954,55.7906909),
      LatLng( 25.6867222,55.7892070),
      LatLng( 25.6837153,55.7839809),
      LatLng( 25.6831954,55.7830596),
      LatLng( 25.6825709,55.7821409),
      LatLng( 25.6818578,55.7813394),
      LatLng( 25.6811005,55.7806018),
      LatLng( 25.6816861,55.7798209),
      LatLng( 25.6820530,55.7801570),
      LatLng( 25.6822494,55.7803390),
      LatLng( 25.6823958,55.7805195),
      LatLng( 25.6827377,55.7809575),
      LatLng( 25.6828354,55.7810737),
      LatLng( 25.6829259,55.7811374),
      LatLng( 25.6830163,55.7811753),
      LatLng( 25.6831085,55.7811824),
      LatLng( 25.6831804,55.7812755),
      LatLng( 25.6834048,55.7815600),
    ];
    /*   for (var tp in tpLocation) {
      polylineCoordinates.add(tp.location!);
    }*/
    Polyline polyline =
    await PolylineService().getdrawPolyline(polylineCoordinates,Colors.red);

    _polyLines.add(polyline);

    update();
  }

  Future<void> getDrawPolylineBlue(List<LocationModel> tpLocation) async {
    List<LatLng> polylineCoordinates = [
      LatLng( 25.7965386,-304.0293049),
          LatLng( 25.7964915,-304.0292928),
          LatLng( 25.7963442,-304.0293438),
          LatLng( 25.7967869,-304.0307833),
          LatLng( 25.7971820,-304.0322385),
          LatLng( 25.7999162,-304.0312941),
          LatLng( 25.8012789,-304.0308391),
          LatLng( 25.8026356,-304.0303477),
          LatLng( 25.8027156,-304.0302125),
          LatLng( 25.8027663,-304.0300529),
          LatLng( 25.8027687,-304.0298598),
          LatLng( 25.8018797,-304.0267029),
          LatLng( 25.8013279,-304.0250923),
          LatLng( 25.8006103,-304.0237651),
          LatLng( 25.8027181,-304.0224459),
          LatLng( 25.8046750,-304.0208889),
          LatLng( 25.8082136,-304.0171643),
          LatLng( 25.8133699,-304.0128794),
          LatLng( 25.8159479,-304.0107232),
          LatLng( 25.8185271,-304.0085635),
          LatLng( 25.8196083,-304.0074613),
          LatLng( 25.8205750,-304.0061892),
          LatLng( 25.8223340,-304.0035944),
          LatLng( 25.8257857,-303.9984393),
          LatLng( 25.8292520,-303.9933143),
          LatLng( 25.8309846,-303.9907380),
          LatLng( 25.8318584,-303.9894441),
          LatLng( 25.8322757,-303.9887880),
          LatLng( 25.8325485,-303.9883763),
          LatLng( 25.8327938,-303.9879408),
          LatLng( 25.8329754,-303.9874748),
          LatLng( 25.8330603,-303.9870347),
          LatLng( 25.8330571,-303.9860554),
          LatLng( 25.8330329,-303.9854138),
          LatLng( 25.8331280,-303.9848891),
          LatLng( 25.8333174,-303.9844625),
          LatLng( 25.8335574,-303.9841366),
          LatLng( 25.8337666,-303.9839288),
          LatLng( 25.8340208,-303.9837528),
          LatLng( 25.8343455,-303.9836301),
          LatLng( 25.8346546,-303.9835705),
          LatLng( 25.8352199,-303.9835454),
          LatLng( 25.8357785,-303.9835122),
          LatLng( 25.8368164,-303.9834721),
          LatLng( 25.8378155,-303.9833553),
          LatLng( 25.8387681,-303.9830852),
          LatLng( 25.8396556,-303.9827136),
          LatLng( 25.8427218,-303.9813322),
          LatLng( 25.8443963,-303.9807736),
          LatLng( 25.8461132,-303.9803911),
          LatLng( 25.8501762,-303.9798933),
          LatLng( 25.8542474,-303.9794971),
          LatLng( 25.8616577,-303.9787093),
          LatLng( 25.8635380,-303.9785480),
          LatLng( 25.8654054,-303.9782369),
          LatLng( 25.8672040,-303.9778023),
          LatLng( 25.8689160,-303.9771171),
          LatLng( 25.8693645,-303.9768161),
          LatLng( 25.8697882,-303.9764400),
          LatLng( 25.8706103,-303.9754582),
          LatLng( 25.8714226,-303.9744988),
          LatLng( 25.8717955,-303.9740542),
          LatLng( 25.8721284,-303.9735585),
          LatLng( 25.8734606,-303.9713628),
          LatLng( 25.8741369,-303.9702348),
          LatLng( 25.8748523,-303.9690191),
          LatLng( 25.8774811,-303.9645938),
          LatLng( 25.8781420,-303.9634890),
          LatLng( 25.8787781,-303.9623561),
          LatLng( 25.8794065,-303.9610937),
          LatLng( 25.8799843,-303.9597870),
          LatLng( 25.8820626,-303.9544007),
          LatLng( 25.8825746,-303.9530490),
          LatLng( 25.8828362,-303.9523922),
          LatLng( 25.8831218,-303.9517547),
          LatLng( 25.8834602,-303.9511317),
          LatLng( 25.8838508,-303.9505365),
          LatLng( 25.8842435,-303.9500574),
          LatLng( 25.8846433,-303.9495944),
          LatLng( 25.8852686,-303.9490630),
          LatLng( 25.8859365,-303.9486223),
          LatLng( 25.8862717,-303.9483818),
          LatLng( 25.8866025,-303.9482009),
          LatLng( 25.8872817,-303.9478346),
          LatLng( 25.8886403,-303.9470502),
          LatLng( 25.8893290,-303.9466782),
          LatLng( 25.8900086,-303.9463463),
          LatLng( 25.8907665,-303.9461011),
          LatLng( 25.8915114,-303.9459407),
          LatLng( 25.8929769,-303.9458244),
          LatLng( 25.8937536,-303.9456633),
          LatLng( 25.8944979,-303.9453652),
          LatLng( 25.8948411,-303.9451581),
          LatLng( 25.8951492,-303.9448987),
          LatLng( 25.8957435,-303.9443337),
          LatLng( 25.8961032,-303.9438814),
          LatLng( 25.8967689,-303.9427585),
          LatLng( 25.8977537,-303.9411768),
          LatLng( 25.8982910,-303.9403899),
          LatLng( 25.8989673,-303.9397697),
          LatLng( 25.8993887,-303.9394845),
          LatLng( 25.8998145,-303.9392823),
          LatLng( 25.9002666,-303.9391418),
          LatLng( 25.9007017,-303.9390775),
          LatLng( 25.9014813,-303.9390813),
          LatLng( 25.9018686,-303.9391827),
          LatLng( 25.9021963,-303.9393025),
          LatLng( 25.9035461,-303.9398252),
          LatLng( 25.9062311,-303.9409527),
          LatLng( 25.9089555,-303.9420902),
          LatLng( 25.9103196,-303.9426501),
          LatLng( 25.9116752,-303.9432344),
          LatLng( 25.9130723,-303.9438199),
          LatLng( 25.9144998,-303.9443278),
          LatLng( 25.9152139,-303.9445636),
          LatLng( 25.9159262,-303.9447738),
          LatLng( 25.9173355,-303.9451212),
          LatLng( 25.9201941,-303.9456611),
          LatLng( 25.9218039,-303.9459114),
          LatLng( 25.9224566,-303.9459500),
          LatLng( 25.9230725,-303.9459536),
          LatLng( 25.9236851,-303.9459172),
          LatLng( 25.9242772,-303.9458456),
          LatLng( 25.9254372,-303.9456336),
          LatLng( 25.9266127,-303.9452345),
          LatLng( 25.9277261,-303.9446902),
          LatLng( 25.9288411,-303.9439636),
          LatLng( 25.9299013,-303.9431448),
          LatLng( 25.9303981,-303.9426814),
          LatLng( 25.9308678,-303.9421766),
          LatLng( 25.9313058,-303.9416544),
          LatLng( 25.9317052,-303.9410851),
          LatLng( 25.9348213,-303.9364583),
          LatLng( 25.9355328,-303.9353936),
          LatLng( 25.9364370,-303.9344882),
          LatLng( 25.9369872,-303.9340278),
          LatLng( 25.9375440,-303.9336507),
          LatLng( 25.9380125,-303.9334167),
          LatLng( 25.9384914,-303.9332171),
          LatLng( 25.9391695,-303.9329390),
          LatLng( 25.9398364,-303.9327792),
          LatLng( 25.9405302,-303.9326911),
          LatLng( 25.9412232,-303.9326678),
          LatLng( 25.9445040,-303.9326840),
          LatLng( 25.9465283,-303.9327554),
          LatLng( 25.9471364,-303.9327908),
          LatLng( 25.9477344,-303.9328982),
          LatLng( 25.9492104,-303.9332646),
          LatLng( 25.9504341,-303.9337337),
          LatLng( 25.9516475,-303.9344152),
          LatLng( 25.9527870,-303.9352344),
          LatLng( 25.9550467,-303.9368648),
          LatLng( 25.9573468,-303.9385648),
          LatLng( 25.9585927,-303.9394071),
          LatLng( 25.9591837,-303.9397277),
          LatLng( 25.9597165,-303.9399586),
          LatLng( 25.9603551,-303.9401656),
          LatLng( 25.9608630,-303.9402668),
          LatLng( 25.9612614,-303.9403428),
          LatLng( 25.9614312,-303.9403597),
          LatLng( 25.9619740,-303.9403864),
          LatLng( 25.9631073,-303.9403118),
          LatLng( 25.9641571,-303.9400495),
          LatLng( 25.9653181,-303.9397788),
          LatLng( 25.9658179,-303.9396410),
          LatLng( 25.9660564,-303.9395209),
          LatLng( 25.9661413,-303.9393925),
          LatLng( 25.9662530,-303.9393291),
          LatLng( 25.9663867,-303.9393083),
          LatLng( 25.9665341,-303.9393371),
          LatLng( 25.9666911,-303.9393771),
          LatLng( 25.9668455,-303.9393854),
          LatLng( 25.9673757,-303.9392652),
          LatLng( 25.9679413,-303.9390601),
          LatLng( 25.9686023,-303.9387253),
          LatLng( 25.9690807,-303.9384193),
          LatLng( 25.9695223,-303.9380376),
          LatLng( 25.9699548,-303.9376345),
          LatLng( 25.9703899,-303.9372918),
          LatLng( 25.9721025,-303.9357426),
          LatLng( 25.9738385,-303.9342013),
          LatLng( 25.9747175,-303.9334221),
          LatLng( 25.9752117,-303.9329924),
          LatLng( 25.9755847,-303.9326286),
          LatLng( 25.9756647,-303.9323440),
          LatLng( 25.9757759,-303.9320886),
          LatLng( 25.9760256,-303.9320474),
          LatLng( 25.9761290,-303.9320797),
          LatLng( 25.9762140,-303.9321527),
          LatLng( 25.9762760,-303.9323486),
          LatLng( 25.9762605,-303.9325082),
          LatLng( 25.9763026,-303.9326964),
          LatLng( 25.9766850,-303.9332762),
          LatLng( 25.9773981,-303.9342032),
          LatLng( 25.9772471,-303.9343713),
          LatLng( 25.9762260,-303.9328852),
          LatLng( 25.9760995,-303.9327789),
          LatLng( 25.9759248,-303.9327311),
          LatLng( 25.9757512,-303.9326404),
          LatLng( 25.9756763,-303.9325258),
          LatLng( 25.9756427,-303.9323864),
          LatLng( 25.9756690,-303.9322522),
          LatLng( 25.9757514,-303.9321196),
          LatLng( 25.9758740,-303.9320457),
          LatLng( 25.9761782,-303.9320120),
          LatLng( 25.9764045,-303.9319196),
          LatLng( 25.9773044,-303.9310717),
          LatLng( 25.9776592,-303.9306556),
          LatLng( 25.9779611,-303.9301803),
          LatLng( 25.9782033,-303.9296598),
          LatLng( 25.9783881,-303.9291147),
          LatLng( 25.9785209,-303.9286480),
          LatLng( 25.9787030,-303.9277359),
          LatLng( 25.9789570,-303.9263179),
          LatLng( 25.9792868,-303.9244135),
          LatLng( 25.9795351,-303.9231477),
          LatLng( 25.9798405,-303.9222240),
          LatLng( 25.9802173,-303.9214985),
          LatLng( 25.9805332,-303.9210303),
          LatLng( 25.9808478,-303.9206267),
          LatLng( 25.9814989,-303.9200247),
          LatLng( 25.9818302,-303.9197669),
          LatLng( 25.9821592,-303.9195439),
          LatLng( 25.9829435,-303.9191524),
          LatLng( 25.9836977,-303.9189030),
          LatLng( 25.9844392,-303.9188075),
          LatLng( 25.9851815,-303.9188013),
          LatLng( 25.9913781,-303.9189363),
          LatLng( 25.9940539,-303.9194084),
          LatLng( 25.9963670,-303.9200303),
          LatLng( 25.9975974,-303.9200708),
          LatLng( 25.9983772,-303.9203267),
          LatLng( 25.9988410,-303.9203431),
          LatLng( 25.9999026,-303.9202572),
          LatLng( 26.0009083,-303.9200288),
          LatLng( 26.0028593,-303.9194926),
          LatLng( 26.0076015,-303.9182551),
          LatLng( 26.0099797,-303.9176375),
          LatLng( 26.0123357,-303.9169550),
          LatLng( 26.0151693,-303.9162123),
          LatLng( 26.0158870,-303.9160425),
          LatLng( 26.0165687,-303.9157982),
          LatLng( 26.0172594,-303.9154926),
          LatLng( 26.0180537,-303.9150413),
          LatLng( 26.0188737,-303.9144620),
          LatLng( 26.0196544,-303.9138314),
          LatLng( 26.0204219,-303.9131257),
          LatLng( 26.0211899,-303.9124926),
          LatLng( 26.0215986,-303.9122536),
          LatLng( 26.0220162,-303.9120572),
          LatLng( 26.0228707,-303.9117886),
          LatLng( 26.0233224,-303.9116957),
          LatLng( 26.0237902,-303.9116501),
          LatLng( 26.0246192,-303.9116836),
          LatLng( 26.0260833,-303.9117480),
          LatLng( 26.0267791,-303.9117768),
          LatLng( 26.0271340,-303.9117833),
          LatLng( 26.0273426,-303.9117289),
          LatLng( 26.0275090,-303.9116223),
          LatLng( 26.0277115,-303.9113112),
          LatLng( 26.0282797,-303.9086139),
          LatLng( 26.0286446,-303.9069575),
          LatLng( 26.0287675,-303.9066035),
          LatLng( 26.0290463,-303.9060552),
          LatLng( 26.0293152,-303.9054791),
          LatLng( 26.0298376,-303.9043749),
          LatLng( 26.0301031,-303.9038310),
          LatLng( 26.0302647,-303.9035696),
          LatLng( 26.0304350,-303.9033725),
          LatLng( 26.0307141,-303.9032292),
          LatLng( 26.0309884,-303.9031906),
          LatLng( 26.0315423,-303.9032458),
          LatLng( 26.0320744,-303.9033106),
          LatLng( 26.0326014,-303.9033834),
    ];
    /*   for (var tp in tpLocation) {
      polylineCoordinates.add(tp.location!);
    }*/
    Polyline polyline =
    await PolylineService().getdrawPolyline(polylineCoordinates,Colors.blue);

    _polyLines.add(polyline);

    update();
  }

  Future<void> getDrawPolylinePurple(List<LocationModel> tpLocation) async {
    List<LatLng> polylineCoordinates = [
      // LatLng( 25.7901073,55.9676471),
      // LatLng( 25.7873348,55.9667566),
      LatLng( 25.7870740,55.9666493),
      LatLng( 25.7868941,55.9672158),
      LatLng( 25.7868499,55.9674075),
      LatLng( 25.7868950,55.9676031),
      LatLng( 25.7868859,55.9677240),
      LatLng( 25.7868421,55.9677973),
      LatLng( 25.7867410,55.9679471),
      LatLng( 25.7865869,55.9680469),
      LatLng( 25.7863494,55.9680763),
      LatLng( 25.7861430,55.9679807),
      LatLng( 25.7859833,55.9678452),
      LatLng( 25.7856717,55.9677216),
      LatLng( 25.7852518,55.9675171),
      LatLng( 25.7847913,55.9673784),
      LatLng( 25.7843158,55.9672925),
      LatLng( 25.7838265,55.9672308),
      LatLng( 25.7820393,55.9670591),
      LatLng( 25.7776740,55.9665544),
      LatLng( 25.7733174,55.9660146),
      LatLng( 25.7731053,55.9675344),
      LatLng( 25.7729160,55.9689993),
      LatLng( 25.7727337,55.9705250),
      LatLng( 25.7726472,55.9713036),
      LatLng( 25.7726541,55.9720397),
      LatLng( 25.7726834,55.9727789),
      LatLng( 25.7727188,55.9735210),
      LatLng( 25.7727368,55.9742790),
      LatLng( 25.7727343,55.9746555),
      LatLng( 25.7726946,55.9750227),
      LatLng( 25.7725685,55.9765453),
      LatLng( 25.7723914,55.9780776),
      LatLng( 25.7691532,55.9776537),
      LatLng( 25.7675401,55.9774385),
      LatLng( 25.7667184,55.9773672),
      LatLng( 25.7658979,55.9772768),
      LatLng( 25.7657637,55.9772158),
      LatLng( 25.7656725,55.9770385),
      LatLng( 25.7656197,55.9764478),
      LatLng( 25.7655688,55.9754902),
      LatLng( 25.7655455,55.9753343),
      LatLng( 25.7655707,55.9751402),
      LatLng( 25.7656364,55.9750437),
      LatLng( 25.7656654,55.9749216),
      LatLng( 25.7656438,55.9748201),
      LatLng( 25.7655837,55.9747223),
      LatLng( 25.7654358,55.9746539),
      LatLng( 25.7652402,55.9747177),
      LatLng( 25.7651837,55.9749952),
      LatLng( 25.7652838,55.9751659),
      LatLng( 25.7653562,55.9753507),
      LatLng( 25.7654167,55.9755311),
      LatLng( 25.7654134,55.9755341),
      LatLng( 25.7654383,55.9757846),
      LatLng( 25.7654977,55.9764594),
      LatLng( 25.7656140,55.9775977),
      LatLng( 25.7656908,55.9784884),
      LatLng( 25.7657388,55.9793864),
      LatLng( 25.7655405,55.9810143),
      LatLng( 25.7654632,55.9811752),
      LatLng( 25.7655260,55.9813898),
      LatLng( 25.7654342,55.9822052),
      LatLng( 25.7653372,55.9832489),
      LatLng( 25.7641773,55.9831220),
      LatLng( 25.7629809,55.9829779),
      LatLng( 25.7606608,55.9826924),
      LatLng( 25.7582914,55.9824084),
      LatLng( 25.7559926,55.9821242),
      LatLng( 25.7560295,55.9815829),
      LatLng( 25.7560973,55.9809773),
      LatLng( 25.7561386,55.9807779),
      LatLng( 25.7561601,55.9805374),
      LatLng( 25.7562325,55.9801941),
      LatLng( 25.7563582,55.9800814),
      LatLng( 25.7564640,55.9800427),
      LatLng( 25.7566142,55.9800546),
      LatLng( 25.7576433,55.9801941),
      LatLng( 25.7653125,55.9812248),
      LatLng( 25.7654430,55.9812511),
      LatLng( 25.7655819,55.9813611),
      LatLng( 25.7658052,55.9813374),
      LatLng( 25.7660109,55.9813365),
      LatLng( 25.7662159,55.9813374),
      LatLng( 25.7687860,55.9817459),
      LatLng( 25.7713629,55.9821361),
      LatLng( 25.7721116,55.9822692),
      LatLng( 25.7728067,55.9824545),
      LatLng( 25.7741600,55.9828013),
      LatLng( 25.7772376,55.9836007),
      LatLng( 25.7789897,55.9840558),
      LatLng( 25.7797680,55.9842559),
      LatLng( 25.7801236,55.9843387),
      LatLng( 25.7803964,55.9844892),
      LatLng( 25.7806847,55.9848395),
      LatLng( 25.7809404,55.9853522),
      LatLng( 25.7813171,55.9859880),
      LatLng( 25.7816832,55.9864189),
      LatLng( 25.7821094,55.9866612),
      LatLng( 25.7878675,55.9882323),
      LatLng( 25.7879916,55.9883896),
      LatLng( 25.7880774,55.9885442),
      LatLng( 25.7881445,55.9888097),
      LatLng( 25.7876698,55.9909389),
      LatLng( 25.7871451,55.9934272),
    ];
    /*   for (var tp in tpLocation) {
      polylineCoordinates.add(tp.location!);
    }*/
    Polyline polyline =
    await PolylineService().getdrawPolyline(polylineCoordinates,Colors.purple);

    _polyLines.add(polyline);

    update();
  }

  Future<void> drawPolyline(LatLng from, LatLng to, String tpId) async {
    Polyline polyline = await PolylineService().drawPolyline(from, to, tpId);

    _polyLines.add(polyline);

    update();
  }

  Future<PlaceModel> getLocationName(LatLng location) {
    return placeViewModel.getLocationName(location);
  }
}
